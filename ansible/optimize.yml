- name: 系统优化
  hosts: '{{ host }}'
  remote_user: root
  #gather_facts: false
  vars:
    limit_files: 209708
  tasks:
  - name: 优化ulimit
    shell: echo "ulimit -SHn {{ limit_files }}" >> /etc/rc.local && echo 'ulimit -HSn {{ limit_files }}' >> /etc/profile && source /etc/profile
    tags: ulimit
  - name: 优化limits -> /etc/security/limits.conf
    lineinfile: dest=/etc/security/limits.conf regexp='{{ item.regexp }}' line='{{ item.line }}'
    with_items:
      - { regexp: '^\* soft nproc', line: '* soft nproc {{ limit_files }}' }
      - { regexp: '^\* hard nproc', line: '* hard nproc {{ limit_files }}' }
      - { regexp: '^\* soft nofile', line: '* soft nofile {{ limit_files }}' }
      - { regexp: '^\* hard nofile', line: '* hard nofile {{ limit_files }}' }
    tags: ulimit
  - name: 内核参数优化
    sysctl: name={{ item.name }} value={{ item.value }} state=present reload=yes
    with_items:
      #https://klaver.it/linux/sysctl.conf
      #1，一般系统安全选项
      - { name: kernel.sysrq, value: 0 } #控制内核的系统请求调试功能
      - { name: kernel.core_uses_pid, value: 1 } #控制核心转储是否将PID附加到核心文件名，用于调试多线程应用程序
      - { name: kernel.pid_max, value: 65535 } #允许更多的PID
      #- { name: kernel.maps_protect, value: 1 } #允许ptrace进程的＃个读者
      #Enable ExecShield保护
      #- { name: kernel.exec-shield, value: 1 }
      - { name: kernel.randomize_va_space, value: 2 } #虚拟存储区域保护
      - { name: kernel.msgmnb, value: 65535 } #控制消息的最大大小（以字节为单位）
      - { name: kernel.msgmax, value: 65535 } #控制消息队列的默认最大大小
      - { name: fs.suid_dumpable, value: 0 } #限制核心转储
      - { name: kernel.kptr_restrict, value: 1 } #隐藏暴露的内核指针
      - { name: fs.protected_hardlinks, value: 1 }
      - { name: fs.protected_symlinks, value: 1 }
      #2，改进系统内存管理
      - { name: fs.file-max, value: '{{ limit_files }}' } #增加文件句柄和inode缓存的大小
      #少交换
      - { name: vm.swappiness, value: 30 }
      - { name: vm.dirty_ratio, value: 30 }
      - { name: vm.dirty_background_ratio, value: 5 }
      - { name: vm.mmap_min_addr, value: 4096 } #指定允许进程映射的最小虚拟地址 65536
      #50％可用内存过量使用
      - { name: vm.overcommit_ratio, value: 50 }
      - { name: vm.overcommit_memory, value: 0 }
      #设置分配给shm的最大内存量为256MB
      - { name: kernel.shmmax, value: 268435456 }
      - { name: kernel.shmall, value: 268435456 }
      - { name: vm.min_free_kbytes, value: 65535 } #保留至少64MB的可用RAM空间
      #3，一般网络安全选项
      #Prevent SYN攻击，启用SYNcookies（当达到max_syn_backlog时，它们将启动）
      - { name: net.ipv4.tcp_syncookies, value: 1 }
      - { name: net.ipv4.tcp_syn_retries, value: 2 }
      - { name: net.ipv4.tcp_synack_retries, value: 2 }
      - { name: net.ipv4.tcp_max_syn_backlog, value: 4096 }
      #禁止报文转发
      - { name: net.ipv4.ip_forward, value: 0 }
      - { name: net.ipv4.conf.all.forwarding, value: 0 }
      - { name: net.ipv4.conf.default.forwarding, value: 0 }
      - { name: net.ipv6.conf.all.forwarding, value: 0 }
      - { name: net.ipv6.conf.default.forwarding, value: 0 }
      #禁用IP源路由
      - { name: net.ipv4.conf.all.send_redirects, value: 0 }
      - { name: net.ipv4.conf.default.send_redirects, value: 0 }
      - { name: net.ipv4.conf.all.accept_source_route, value: 0 }
      - { name: net.ipv4.conf.default.accept_source_route, value: 0 }
      - { name: net.ipv6.conf.all.accept_source_route, value: 0 }
      - { name: net.ipv6.conf.default.accept_source_route, value: 0 }
      #+发送（路由器）或接受（主机）RCF1620共享媒体重定向
      - { name: net.ipv4.conf.all.shared_media, value: 1 }
      - { name: net.ipv4.conf.default.shared_media, value: 1 }
      #启用IP欺骗保护，开启源路由验证
      - { name: net.ipv4.conf.all.rp_filter, value: 1 }
      - { name: net.ipv4.conf.default.rp_filter, value: 1 }
      #禁用ICMP重定向接受
      - { name: net.ipv4.conf.all.accept_redirects, value: 0 }
      - { name: net.ipv4.conf.default.accept_redirects, value: 0 }
      - { name: net.ipv4.conf.all.secure_redirects, value: 0 }
      - { name: net.ipv4.conf.default.secure_redirects, value: 0 }
      - { name: net.ipv6.conf.all.accept_redirects, value: 0 }
      - { name: net.ipv6.conf.default.accept_redirects, value: 0 }
      #开启日志欺骗报文，源路由报文，重定向报文
      - { name: net.ipv4.conf.all.log_martians, value: 1 }
      - { name: net.ipv4.conf.default.log_martians, value: 1 }
      - { name: net.ipv4.tcp_fin_timeout, value: 7 } #减少tcp_fin_timeout连接的时间默认值
      #减少连接的时间默认值以保持活动状态
      - { name: net.ipv4.tcp_keepalive_time, value: 300 }
      - { name: net.ipv4.tcp_keepalive_probes, value: 5 }
      - { name: net.ipv4.tcp_keepalive_intvl, value: 15 }
      - { name: net.ipv4.conf.all.arp_ignore, value: 1 } #+定义用于声明本地源IP的限制级别
      - { name: net.ipv4.conf.all.arp_announce, value: 2 } #+定义响应发送响应的模式 接收解析本地目标IP地址的ARP请求
      - { name: net.ipv4.conf.all.bootp_relay, value: 0 } #不要中继bootp
      - { name: net.ipv4.conf.all.proxy_arp, value: 0 } #不要为任何人代理arp
      - { name: net.ipv4.tcp_timestamps, value: 0 } #-防止在千兆速度下包装序列号
      - { name: net.ipv4.icmp_echo_ignore_all, value: 0 } #不要忽视定向ping
      - { name: net.ipv4.icmp_echo_ignore_broadcasts, value: 1 } #启用忽略广播请求
      - { name: net.ipv4.icmp_ignore_bogus_error_responses, value: 1 } #启用错误的错误消息保护
      - { name: net.ipv4.icmp_ratelimit, value: 100 } #+
      - { name: net.ipv4.icmp_ratemask, value: 88089 } #+
      - { name: net.ipv4.ip_local_port_range, value: '16384 65535' } #允许本地端口范围
      - { name: net.ipv4.tcp_rfc1337, value: 1 } #启用RFC1337的修复 TCP中的时间等待暗杀危险
      #不自动配置IPv6
      - { name: net.ipv6.conf.all.autoconf, value: 0 }
      - { name: net.ipv6.conf.all.accept_ra, value: 0 }
      - { name: net.ipv6.conf.default.autoconf, value: 0 }
      - { name: net.ipv6.conf.default.accept_ra, value: 0 }
      - { name: net.ipv6.conf.all.disable_ipv6, value: 1 } #+禁止IPV6
      - { name: net.ipv6.conf.default.router_solicitations, value: 1 } #+禁用IPv6路由器请求消息的接受
      - { name: net.ipv6.conf.default.accept_ra_rtr_pref, value: 0 } #+禁止接受路由器广告的路由器偏好
      - { name: net.ipv6.conf.default.accept_ra_pinfo, value: 0 } #+禁用路由器广告中的学习前缀信息
      - { name: net.ipv6.conf.default.accept_ra_defrtr, value: 0 } #+禁用路由器广告的学习跳跃限制
      - { name: net.ipv6.conf.default.dad_transmits, value: 0 } #+禁用邻居请求发送每个地址
      - { name: net.ipv6.conf.default.max_addresses, value: 1 } #+为每个接口分配一个全局单播IPv6地址
      #3，调谐网络性能
      - { name: net.ipv4.tcp_congestion_control, value: 'htcp' } #对于高带宽低延迟网络，请使用'htcp'拥塞控制 先做一个'modprobe tcp_htcp'
      - { name: net.core.default_qdisc, value: 'fq' } #对于具有tcp-heavy工作负载的服务器，启用'fq'队列管理调度程序（内核> 3.12）
      - { name: net.ipv4.tcp_window_scaling, value: 1 } #打开tcp_window_scaling
      #增加可分配的读缓冲区空间
      - { name: net.ipv4.tcp_rmem, value: '8192 87380 16777216' }
      - { name: net.ipv4.udp_rmem_min, value: 16384 }
      - { name: net.core.rmem_default, value: 262144 }
      - { name: net.core.rmem_max, value: 16777216 }
      #增加可分配的写缓冲区空间
      - { name: net.ipv4.tcp_wmem, value: '8192 65536 16777216' }
      - { name: net.ipv4.udp_wmem_min, value: 16384 }
      - { name: net.core.wmem_default, value: 262144 }
      - { name: net.core.wmem_max, value: 16777216 }
      - { name: net.core.somaxconn, value: 32768 } #增加传入连接数
      #增加传入连接积压的数量
      - { name: net.core.netdev_max_backlog, value: 16384 }
      - { name: net.core.dev_weight, value: 64 }
      - { name: net.core.optmem_max, value: 65535 } #增加选项内存缓冲区的最大数量
      - { name: net.ipv4.tcp_max_tw_buckets, value: 1440000 } #增加tcp-time-wait桶的大小，以防止简单的DOS攻击
      #尝试重用时间等待连接，但不回收它们（回收可以破坏NAT后面的客户端）
      - { name: net.ipv4.tcp_tw_recycle, value: 0 }
      - { name: net.ipv4.tcp_tw_reuse, value: 1 }
      #限制孤儿的数量，每个孤儿可以吃最多16M（最大wmem）的不可挽回的记忆
      - { name: net.ipv4.tcp_max_orphans, value: 16384 }
      - { name: net.ipv4.tcp_orphan_retries, value: 0 }
      #增加用于重组IP分片的最大内存
      - { name: net.ipv4.ipfrag_high_thresh, value: 512000 }
      - { name: net.ipv4.ipfrag_low_thresh, value: 446464 }
      #不要缓存先前连接的ssthresh
      - { name: net.ipv4.tcp_no_metrics_save, value: 1 }
      - { name: net.ipv4.tcp_moderate_rcvbuf, value: 1 }
      - { name: net.unix.max_dgram_qlen, value: 50 } #增加RPC数据报队列长度的大小
      - { name: net.ipv4.neigh.default.gc_thresh3, value: 2048 } #不要让arp表变大
      - { name: net.ipv4.neigh.default.gc_thresh2, value: 1024 } #告诉gc什么时候用arp桌子清洁变得好斗 根据LAN的大小调整此值。1024适用于大多数/ 24个网络
      - { name: net.ipv4.neigh.default.gc_thresh1, value: 32 } #调整gc将单独留下arp表的位置 - 设置为32
      - { name: net.ipv4.neigh.default.gc_interval, value: 30 } #调整到arp table gc以更频繁地清理
      #增加TCP队列长度
      - { name: net.ipv4.neigh.default.proxy_qlen, value: 96 }
      - { name: net.ipv4.neigh.default.unres_qlen, value: 6 }
      #启用显式拥塞通知（RFC 3168），如果它不适合您，请将其禁用
      - { name: net.ipv4.tcp_ecn, value: 1 }
      - { name: net.ipv4.tcp_reordering, value: 3 }
      #重试杀死活动TCP连接的次数
      - { name: net.ipv4.tcp_retries2, value: 15 }
      - { name: net.ipv4.tcp_retries1, value: 3 }
      - { name: net.ipv4.tcp_slow_start_after_idle, value: 0 } #在连接空闲后避免回退到慢速启动 使用keep alive连接保持cwnd大（内核> 3.6）
      - { name: net.ipv4.tcp_fastopen, value: 3 } #允许使用TCP fastopen标志，注意一些防火墙不喜欢TFO！（内核> 3.7）
      #这将使得即时后续连接使用新值
      - { name: net.ipv4.route.flush, value: 1 }
      - { name: net.ipv6.route.flush, value: 1 }

    tags: sysctl
  - name: 优化PHP -> rlimit_files = {{ limit_files }}
    lineinfile: dest={{ item }} regexp='^;rlimit_files =' line='rlimit_files = {{ limit_files }}' backrefs=yes
    with_items:
      - /etc/php-fpm.conf
      - /etc/php-fpm.d/www.conf
    tags: php
  - name: 优化PHP -> pm.max_children
    lineinfile: dest=/etc/php-fpm.d/www.conf regexp='{{ item.regexp }}' line='{{ item.line }}' backrefs=yes
    with_items:
      - { regexp: '^;pm =', line: 'pm = dynamic' }
      - { regexp: '^pm =', line: 'pm = dynamic' }
      - { regexp: '^;pm.max_children', line: 'pm.max_children = "{{ (ansible_memtotal_mb*0.8/30) | int }}"' }
      - { regexp: '^pm.max_children', line: 'pm.max_children = "{{ (ansible_memtotal_mb*0.8/30) | int }}"' }
      - { regexp: '^;pm.start_servers', line: 'pm.start_servers = 30' }
      - { regexp: '^pm.start_servers', line: 'pm.start_servers = 30' }
      - { regexp: '^;pm.min_spare_servers', line: 'pm.min_spare_servers = 15' }
      - { regexp: '^pm.min_spare_servers', line: 'pm.min_spare_servers = 15' }
      - { regexp: '^;pm.max_spare_servers', line: 'pm.max_spare_servers = 45' }
      - { regexp: '^pm.max_spare_servers', line: 'pm.max_spare_servers = 45' }
      - { regexp: '^;pm.max_requests', line: 'pm.max_requests = 1000' }
      - { regexp: '^pm.max_requests', line: 'pm.max_requests = 1000' }
    tags: php
  - name: 重启php-fpm服务
    service: name=php-fpm state=restarted
    tags: php
  - name: 优化NGINX -> worker_rlimit_nofile {{ limit_files }}
    lineinfile: dest=/etc/nginx/nginx.conf regexp='^worker_rlimit_nofile' insertafter='^worker_processes' line='worker_rlimit_nofile {{ limit_files }};'
    tags: nginx
  - name: 优化NGINX -> use epoll
    lineinfile: dest=/etc/nginx/nginx.conf regexp='^    use epoll' insertafter='^    worker_connections' line='    use epoll;'
    tags: nginx
  - name: 优化NGINX -> worker_connections 102400
    lineinfile: dest=/etc/nginx/nginx.conf regexp='^    worker_connections' line='    worker_connections 102400;' backrefs=yes
    tags: nginx
  - name: 优化NGINX -> include /home/nginx/conf.d/*.conf
    lineinfile: dest=/etc/nginx/nginx.conf regexp='^    include /home/nginx/' insertafter='^    include /etc/nginx/' line='    include /home/nginx/conf.d/*.conf;'
    tags: nginx
  - name: 重启nginx服务
    service: name=nginx state=restarted
    tags: nginx

#ansible-playbook optimize.yml -e host=6168
#ansible-playbook optimize.yml -e host=6168 --tags ulimit
#ansible-playbook optimize.yml -e host=6168 --tags sysctl
#ansible-playbook optimize.yml -e host=6168 --tags php
#ansible-playbook optimize.yml -e host=6168 --tags nginx
#ansible-playbook optimize.yml -e host=6168 --tags ulimit,sysctl
#ansible-playbook optimize.yml -e host=6168 --tags php,nginx
