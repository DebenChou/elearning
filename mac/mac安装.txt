mac备份
1，备份工具：Sublime Text3/SSH Proxy/Microsoft Office 2011/Sequel Pro/MySQLWorkbench/SourceTree/SQLite Professional/Unity/Microsoft Remote Desktop/licecap/Adobe Photoshop CC 2015
2，备份配置文件目录：
/opt/local/etc/nginx/conf.d/
/Library/Services/
/etc/hosts
~/.ssh/
~/.bash_profile
~/.bashrc
~/.inputrc
~/Library/MonoDevelop-Unity-5.0/




mac安装
#商店安装：Go2Shell/Google Chrome/New File Free/PDF Reader X/QQ/QQ音乐/RAR Extractor Free/Thunder/Xcode/Dr. Cleaner/MPlayerX/Color Picker/iHex/Base64Anywhere/App2Dmg/微信/
#下载安装：Sublime Text3/SSH Proxy/MacPorts/nodejs/Microsoft Office 2011/Sequel Pro/MySQLWorkbench/SourceTree/SQLite Professional/Unity/Microsoft Remote Desktop/licecap/Adobe Photoshop CC 2015

##设置存历史命令纪录数
```sh
vi ~/.bashrc
HISTSIZE=50000
HISTFILESIZE=500000
source ~/.bashrc
echo "$HISTSIZE $HISTFILESIZE"
```

vi ~/.bash_profile
```
#nginx
alias nginx_start='sudo launchctl load -w /opt/local/etc/LaunchDaemons/org.macports.nginx/org.macports.nginx.plist'
alias nginx_stop='sudo launchctl unload -w /opt/local/etc/LaunchDaemons/org.macports.nginx/org.macports.nginx.plist'
alias nginx_restart='nginx_stop; nginx_start;'

#php-fpm
alias fpm_start='sudo launchctl load -w /opt/local/etc/LaunchDaemons/org.macports.php56-fpm/org.macports.php56-fpm.plist'
alias fpm_stop='sudo launchctl unload -w /opt/local/etc/LaunchDaemons/org.macports.php56-fpm/org.macports.php56-fpm.plist'
alias fpm_restart='fpm_stop; fpm_start'

#mysql
alias mysql='sudo /usr/local/mysql/bin/mysql'
alias mysqladmin='sudo usr/local/mysql/bin/mysqladmin'

#web
alias web_start='nginx_start;fpm_start'
alias web_restart='nginx_stop;fpm_stop;fpm_start;nginx_start'

#alias
alias port='sudo /opt/local/bin/port'
alias ll='ls -lG'
alias php='/opt/local/bin/php56'

#server
alias 168='~/git_pro/server/168.sh'
alias data-server='~/git_pro/server/data-server.sh'
alias haproxy-server='~/git_pro/server/haproxy-server.sh'
alias proxy-server='~/git_pro/server/proxy-server.sh'
alias qqddz-server='~/git_pro/server/qqddz-server.sh'
alias qqmj2p-server='~/git_pro/server/qqmj2p-server.sh'
alias relaxlife-server='~/git_pro/server/relaxlife-server.sh'

export PATH=$PATH:/opt/local/bin
export PATH=$PATH:/opt/local/sbin
export ANDROID_HOME=~/android-sdk
export PATH=${PATH}:~/android-sdk/tools
export PATH=${PATH}:~/android-sdk/platform-tools

export CLICOLOR=1
export LSCOLORS=gxfxaxdxcxegedabagacad
```
source ~/.bash_profile

#homebrew(http://brew.sh/index_zh-cn.html)
/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

#port
port install nginx php70 php70-fpm php70-mysql php70-sqlite php70-curl php70-gd php70-iconv php70-mbstring php70-mcrypt php-memcached php70-opcache php70-openssl php70-intl php70-gettext php70-imap php70-xmlrpc php70-sockets php70-zip php70-tidy php70-xsl
port select --list php
port select php php70

port install nginx php56 php56-fpm php56-mysql php56-sqlite php56-curl php56-gd php56-iconv php56-mbstring php56-mcrypt php-memcached php56-opcache php56-openssl php56-intl php56-gettext php56-imap php56-xmlrpc php56-sockets php56-zip php56-tidy php56-xsl

cp /opt/local/etc/php70/php.ini-development /opt/local/etc/php70/php.ini
cp /opt/local/etc/php70/php-fpm.conf.default /opt/local/etc/php70/php-fpm.conf
cp /opt/local/etc/php70/php-fpm.d/www.conf.default /opt/local/etc/php70/php-fpm.d/www.conf
fpm_restart

#npm
sudo npm install cnpm -g -ddd
sudo npm install -g cordova -ddd
sudo npm install -g ionic -ddd
sudo npm install uglify-js uglifycss -g

#brew
brew install webkit2png
brew install ImageMagick
brew install nmap wget
brew install mono
brew install python


#~/.ssh/目录权限
chmod a-rwx ~/.ssh/*
chmod u+rw ~/.ssh/*
chmod a+r ~/.ssh/config
chmod a+r ~/.ssh/known_hosts

#安装JDK：http://www.oracle.com/technetwork/java/javase/downloads/index.html
#安装mysql-workbench：http://dev.mysql.com/downloads/workbench/

#laravel
curl -sS https://getcomposer.org/installer | php
php ~/composer.phar global require "fxp/composer-asset-plugin:~1.1.1"

http://down.golaravel.com/laravel/laravel-v5.2.15.zip
php ~/composer.phar install

php artisan key:generate #生成秘钥
php artisan serve #启动server
php artisan make:middleware OldMiddleware #创建中间件
php artisan app:name SocialNet #设置命名空间
php artisan make:provider RiakServiceProvider #服务提供者
php artisan make:migration create_users_table
php artisan migrate --seed

https://phpunit.de/
php ~/phpunit.phar  --bootstrap bootstrap/autoload.php tests/TestCase.php

#percona mysql
port install percona percona-server percona-toolkit
vi ~/.bash_profile
export PATH=/opt/local/lib/percona/bin:$PATH
source ~/.bash_profile
sudo ln -s ~/Documents/configs/MySQL/fat-tony.local/percona-server.my.cnf /opt/local/etc/percona/my.cnf
sudo -u _mysql /opt/local/lib/percona/bin/mysql_install_db

cd /opt/local ; /opt/local/lib/percona/bin/mysqld_safe &
cd mysql-test ; perl mysql-test-run.pl

sudo port load percona-server
sudo port unload percona-server
sudo /opt/local/lib/percona/bin/mysql_secure_installation
sudo /opt/local/lib/percona/bin/mysql_upgrade -uroot -p

vi /opt/local/etc/percona/my.cnf
```
# Generated by Percona Configuration Wizard (http://tools.percona.com/) version REL5-20120208
# Configuration name fat-tony generated for j at 2013-10-24 19:39:07

##
# I am not 100% sure that the UTF8 settings in the sections below are still required.
# I cannot find any documentation of what the default charsets and collations are for
# Percona Server 5.5. Commenting those options below out resulted in the server still
# showing them set as UTF8, but it doesn’t seem to hurt to keep them in there.


[mysql]

# CLIENT #
port                           = 3306
socket                         = /opt/local/var/run/percona/mysql.sock

# Set utf8 as the default character set
character-set=utf8

[mysqld]

# GENERAL #
user                           = mysql
default-storage-engine         = MyISAM
socket                         = /opt/local/var/run/percona/mysql.sock
pid-file                       = /opt/local/var/db/percona/mysql.pid

# MyISAM #
key-buffer-size                = 6G
myisam-recover                 = FORCE,BACKUP

# SAFETY #
max-allowed-packet             = 16M
max-connect-errors             = 1000000

# DATA STORAGE #
datadir                        = /opt/local/var/db/percona/

# BINARY LOGGING #
log-bin                        = /opt/local/var/db/percona/mysql-bin
expire-logs-days               = 14
sync-binlog                    = 1

# CACHES AND LIMITS #
tmp-table-size                 = 32M
max-heap-table-size            = 32M
query-cache-type               = 0
query-cache-size               = 0
max-connections                = 500
thread-cache-size              = 50
open-files-limit               = 65535
table-definition-cache         = 1024
table-open-cache               = 2048

# INNODB #
innodb-flush-method            = O_DIRECT
innodb-log-files-in-group      = 2
innodb-log-file-size           = 32M
innodb-flush-log-at-trx-commit = 1
innodb-file-per-table          = 1
innodb-buffer-pool-size        = 32M

# LOGGING #
log-error                      = /opt/local/var/db/percona/mysql-error.log
log-queries-not-using-indexes  = 1
slow-query-log                 = 1
slow-query-log-file            = /opt/local/var/db/percona/mysql-slow.log

# CUSTOMIZED OPTIONS #
# Set utf8 as the default character set
character-set-server=utf8
collation_server = utf8_general_ci

# Eliminate stop words
ft_stopword_file=

# Set minimum index length to 2 characters
ft_min_word_len=2

[mysqldump]

# CUSTOMIZED OPTIONS #
# Set utf8 as the default character set
character-set=utf8
```
show variables like '%func%';
set global log_bin_trust_function_creators=1;

#memcached
port install memcached
memecached -d
memecached -vv

#zookeeper
brew install zookeeper
zkServer start
zkServer
zkServer status
zkCli

#luadec
port install gcc47 +universal
port select --set gcc mp-gcc47

git clone https://github.com/viruscamp/luadec
cd luadec
git submodule update --init lua-5.2
cd lua-5.2
make macosx
cd ../luadec
make LUAVER=5.2

git clone https://github.com/viruscamp/luadec
cd luadec
git submodule update --init lua-5.1
cd lua-5.1
make linux
cd ../luadec
make LUAVER=5.1

luadec abc.lua
luadec -pn test.lua

luadec filename.luac > filename.lua
luadec -d test.lua > test_src.lua
luadec -dis filename.luac

luadec.exe test.lua > test-dec.lua
luadec5.1.exe Hall.lua > Hall-dec.lua












