mac备份
1，备份工具：Sublime Text3/SSH Proxy/Microsoft Office 2011/Sequel Pro/MySQLWorkbench/SourceTree/SQLite Professional/Unity/Microsoft Remote Desktop/licecap/Adobe Photoshop CC 2015/Apple Configurator 2/
2，备份配置文件目录：
/opt/local/etc/nginx/conf.d/
/Library/Services/
/etc/hosts
~/.ssh/
~/.bash_profile
~/.bashrc
~/.inputrc
~/Library/MonoDevelop-Unity-5.0/


brew cask install mark-text

mac安装
#商店安装：Go2Shell/Google Chrome/New File Free/PDF Reader X/QQ/QQ音乐/RAR Extractor Free/Thunder/Xcode/Dr. Cleaner/MPlayerX/Color Picker/iHex/Base64Anywhere/App2Dmg/微信/
#下载安装：Sublime Text3/SSH Proxy/MacPorts/nodejs/Microsoft Office 2011/Sequel Pro/MySQLWorkbench/SourceTree/SQLite Professional/Unity/Microsoft Remote Desktop/licecap/Adobe Photoshop CC 2015

##设置存历史命令纪录数
```sh
vi ~/.bashrc
HISTSIZE=50000
HISTFILESIZE=500000
source ~/.bashrc
echo "$HISTSIZE $HISTFILESIZE"
```

vi ~/.inputrc
"\e[B": history-search-forward
"\e[A": history-search-backward

npm修复全局模块的权限:
mkdir ~/.npm-global
npm config set prefix '~/.npm-global'

vi ~/.bash_profile
```
#nginx
alias nginx_start='sudo launchctl load -w /opt/local/etc/LaunchDaemons/org.macports.nginx/org.macports.nginx.plist'
alias nginx_stop='sudo launchctl unload -w /opt/local/etc/LaunchDaemons/org.macports.nginx/org.macports.nginx.plist'
alias nginx_restart='nginx_stop; nginx_start;'

#php-fpm
alias fpm_start='sudo launchctl load -w /opt/local/etc/LaunchDaemons/org.macports.php56-fpm/org.macports.php56-fpm.plist'
alias fpm_stop='sudo launchctl unload -w /opt/local/etc/LaunchDaemons/org.macports.php56-fpm/org.macports.php56-fpm.plist'
alias fpm_restart='fpm_stop; fpm_start'

#mysql
alias mysql='sudo /usr/local/mysql/bin/mysql'
alias mysqladmin='sudo usr/local/mysql/bin/mysqladmin'

#web
alias web_start='nginx_start;fpm_start'
alias web_restart='nginx_stop;fpm_stop;fpm_start;nginx_start'

#alias
alias port='sudo /opt/local/bin/port'
alias ll='ls -lG'
alias php='/opt/local/bin/php56'
alias rm='rm -i'

#server
alias 168='~/git_pro/server/168.sh'
alias data-server='~/git_pro/server/data-server.sh'
alias haproxy-server='~/git_pro/server/haproxy-server.sh'
alias proxy-server='~/git_pro/server/proxy-server.sh'
alias qqddz-server='~/git_pro/server/qqddz-server.sh'
alias qqmj2p-server='~/git_pro/server/qqmj2p-server.sh'
alias relaxlife-server='~/git_pro/server/relaxlife-server.sh'

export PATH=$PATH:/opt/local/bin
export PATH=$PATH:/opt/local/sbin
export ANDROID_HOME=~/android-sdk
export PATH=${PATH}:~/android-sdk/tools
export PATH=${PATH}:~/android-sdk/platform-tools
export PATH="$HOME/.npm-global/bin:$PATH"

export CLICOLOR=1
export LSCOLORS=gxfxaxdxcxegedabagacad
```
source ~/.bash_profile

#homebrew(http://brew.sh/index_zh-cn.html)
/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

#port
port install nginx php70 php70-fpm php70-mysql php70-sqlite php70-curl php70-gd php70-iconv php70-mbstring php70-mcrypt php-memcached php70-opcache php70-openssl php70-intl php70-gettext php70-imap php70-xmlrpc php70-sockets php70-zip php70-tidy php70-xsl
port select --list php
port select php php70

cp /opt/local/etc/php70/php.ini-development /opt/local/etc/php70/php.ini
cp /opt/local/etc/php70/php-fpm.conf.default /opt/local/etc/php70/php-fpm.conf
cp /opt/local/etc/php70/php-fpm.d/www.conf.default /opt/local/etc/php70/php-fpm.d/www.conf
fpm_restart

port install nginx php56 php56-fpm php56-mysql php56-sqlite php56-curl php56-gd php56-iconv php56-mbstring php56-mcrypt php-memcached php56-opcache php56-openssl php56-intl php56-gettext php56-imap php56-xmlrpc php56-sockets php56-zip php56-tidy php56-xsl

sudo cp /opt/local/etc/php56/php.ini-development /opt/local/etc/php56/php.ini
sudo cp /opt/local/etc/php56/php-fpm.conf.default /opt/local/etc/php56/php-fpm.conf
fpm_restart

vi /opt/local/etc/nginx/nginx.conf
```

#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;

    include conf.d/*.conf;

}
```
vi /opt/local/etc/nginx/conf.d/default.conf
```
server {
	listen 80;
	server_name test.starcloudcasino.com;
	root /Users/hcxiong/git_pro/starcloud;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    gzip on;
    gzip_min_length 1k;
    gzip_buffers 4 16k;
    gzip_http_version 1.0;
    gzip_comp_level 2;
    gzip_types text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
    gzip_vary off;
    gzip_disable "MSIE [1-6]\.";

    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Headers X-Requested-With;
    add_header Access-Control-Allow-Methods GET,POST,OPTIONS;

    rewrite  ^/mobile/shareapp21?(.*)$  /index.html last;
    rewrite  ^/mobile/shareApp21?(.*)$  /index.html last;

    if ($http_user_agent ~ MSIE) {
        rewrite  ^/mobile  /index.html last;
    }

	location / {
		index index.html index.htm index.php;
		try_files $uri $uri/ /index.php?$args;
	}

	error_page 500 502 503 504 /50x.html;
	location = /50x.html {
		root html;
	}

	location ~ ^(.+.php)(.*)$ {
		fastcgi_split_path_info ^(.+.php)(.*)$;
		fastcgi_param SCRIPT_NAME $fastcgi_script_name;
		fastcgi_param SCRIPT_FILENAME $document_root/$fastcgi_script_name;
		include fastcgi.conf;
		fastcgi_pass 127.0.0.1:9000;
		fastcgi_index index.php;
	}
}
```

#npm
sudo npm install cnpm -g -ddd
sudo npm install -g cordova -ddd
sudo npm install -g ionic -ddd
sudo npm install uglify-js uglifycss -g

#brew
brew install webkit2png
brew install ImageMagick
brew install nmap wget
brew install mono
brew install python

#centos7 webkit2png
git clone https://github.com/adamn/python-webkit2png.git
cd python-webkit2png
python setup.py install
yum -y install PyQt4 PyQt4-devel PyQt4-webkit
yum -y install xorg-x11-server-Xvfb.x86_64
yum -y install wqy-zenhei-fonts.noarch

#~/.ssh/目录权限
chmod a-rwx ~/.ssh/*
chmod u+rw ~/.ssh/*
chmod a+r ~/.ssh/config
chmod a+r ~/.ssh/known_hosts

#安装JDK：http://www.oracle.com/technetwork/java/javase/downloads/index.html
#安装mysql-workbench：http://dev.mysql.com/downloads/workbench/

#laravel
curl -sS https://getcomposer.org/installer | php
php ~/composer.phar global require "fxp/composer-asset-plugin:~1.1.1"

http://down.golaravel.com/laravel/laravel-v5.2.15.zip
php ~/composer.phar install

php artisan key:generate #生成秘钥
php artisan serve #启动server
php artisan make:middleware OldMiddleware #创建中间件
php artisan app:name SocialNet #设置命名空间
php artisan make:provider RiakServiceProvider #服务提供者
php artisan make:migration create_users_table
php artisan migrate --seed

https://phpunit.de/
php ~/phpunit.phar  --bootstrap bootstrap/autoload.php tests/TestCase.php

#percona mysql
port install percona percona-server percona-toolkit
vi ~/.bash_profile
export PATH=/opt/local/lib/percona/bin:$PATH
source ~/.bash_profile
sudo ln -s ~/Documents/configs/MySQL/fat-tony.local/percona-server.my.cnf /opt/local/etc/percona/my.cnf
sudo -u _mysql /opt/local/lib/percona/bin/mysql_install_db

cd /opt/local ; /opt/local/lib/percona/bin/mysqld_safe &
cd mysql-test ; perl mysql-test-run.pl

sudo port load percona-server
sudo port unload percona-server
sudo /opt/local/lib/percona/bin/mysql_secure_installation
sudo /opt/local/lib/percona/bin/mysql_upgrade -uroot -p

vi /opt/local/etc/percona/my.cnf
```
# Generated by Percona Configuration Wizard (http://tools.percona.com/) version REL5-20120208
# Configuration name fat-tony generated for j at 2013-10-24 19:39:07

##
# I am not 100% sure that the UTF8 settings in the sections below are still required.
# I cannot find any documentation of what the default charsets and collations are for
# Percona Server 5.5. Commenting those options below out resulted in the server still
# showing them set as UTF8, but it doesn’t seem to hurt to keep them in there.


[mysql]

# CLIENT #
port                           = 3306
socket                         = /opt/local/var/run/percona/mysql.sock

# Set utf8 as the default character set
character-set=utf8

[mysqld]

# GENERAL #
user                           = mysql
default-storage-engine         = MyISAM
socket                         = /opt/local/var/run/percona/mysql.sock
pid-file                       = /opt/local/var/db/percona/mysql.pid

# MyISAM #
key-buffer-size                = 6G
myisam-recover                 = FORCE,BACKUP

# SAFETY #
max-allowed-packet             = 16M
max-connect-errors             = 1000000

# DATA STORAGE #
datadir                        = /opt/local/var/db/percona/

# BINARY LOGGING #
log-bin                        = /opt/local/var/db/percona/mysql-bin
expire-logs-days               = 14
sync-binlog                    = 1

# CACHES AND LIMITS #
tmp-table-size                 = 32M
max-heap-table-size            = 32M
query-cache-type               = 0
query-cache-size               = 0
max-connections                = 500
thread-cache-size              = 50
open-files-limit               = 65535
table-definition-cache         = 1024
table-open-cache               = 2048

# INNODB #
innodb-flush-method            = O_DIRECT
innodb-log-files-in-group      = 2
innodb-log-file-size           = 32M
innodb-flush-log-at-trx-commit = 1
innodb-file-per-table          = 1
innodb-buffer-pool-size        = 32M

# LOGGING #
log-error                      = /opt/local/var/db/percona/mysql-error.log
log-queries-not-using-indexes  = 1
slow-query-log                 = 1
slow-query-log-file            = /opt/local/var/db/percona/mysql-slow.log

# CUSTOMIZED OPTIONS #
# Set utf8 as the default character set
character-set-server=utf8
collation_server = utf8_general_ci

# Eliminate stop words
ft_stopword_file=

# Set minimum index length to 2 characters
ft_min_word_len=2

[mysqldump]

# CUSTOMIZED OPTIONS #
# Set utf8 as the default character set
character-set=utf8
```
show variables like '%func%';
set global log_bin_trust_function_creators=1;

#memcached
port install memcached
memecached -d
memecached -vv

#zookeeper
brew install zookeeper
zkServer start
zkServer
zkServer status
zkCli
vi /usr/local/etc/zookeeper/zoo.cfg

#redis
brew install redis
redis-server /usr/local/etc/redis.conf

#luadec
port install gcc47 +universal
port select --set gcc mp-gcc47

git clone https://github.com/viruscamp/luadec
cd luadec
git submodule update --init lua-5.2
cd lua-5.2
make macosx
cd ../luadec
make LUAVER=5.2

git clone https://github.com/viruscamp/luadec
cd luadec
git submodule update --init lua-5.1
cd lua-5.1
make linux
cd ../luadec
make LUAVER=5.1

luadec abc.lua
luadec -pn test.lua

luadec filename.luac > filename.lua
luadec -d test.lua > test_src.lua
luadec -dis filename.luac

luadec.exe test.lua > test-dec.lua
luadec5.1.exe Hall.lua > Hall-dec.lua

======================================
brew install php70 php70-ast phan
phan -h

----------- 从 PNG 转换到 JPG -----------
$ ls -1 *.png | xargs -n 1 bash -c 'convert "$0" "${0%.png}.jpg"'
----------- 从 JPG 转换到 PNG -----------
$ ls -1 *.jpg | xargs -n 1 bash -c 'convert "$0" "${0%.jpg}.png"'
brew install parallel
----------- 从 PNG 转换到 JPG -----------
$ parallel convert '{}' '{.}.jpg' ::: *.png
----------- 从 JPG 转换到 PNG -----------
$ parallel convert '{}' '{.}.png' ::: *.jpg
----------- 从 PNG 转换到 JPG -----------
$ ls -1 *.png | parallel convert '{}' '{.}.jpg'
----------- 从 JPG 转换到 PNG -----------
$ ls -1 *.jpg | parallel convert '{}' '{.}.png'
----------- 从 PNG 转换到 JPG -----------
$ bash -c 'for image in *.png; do convert "$image" "${image%.png}.jpg"; echo “image $image converted to ${image%.png}.jpg ”; done'
----------- 从 JPG 转换到 PNG -----------
$ bash -c 'for image in *.jpg; do convert "$image" "${image%.jpg}.png"; echo “image $image converted to ${image%.jpg}.png ”; done'
vi convert.sh
#!/bin/bash
#convert
for image in *.png; do
        convert  "$image"  "${image%.png}.jpg"
        echo “image $image converted to ${image%.png}.jpg ”
done
exit 0

===============================================
foremost恢复文件
rm test.jpg
brew install foremost
foremost -t jpg -i /dev/sda1 -o /home/gacanepa/rescued
df | grep boot => /dev/sda1
avi bmp dll doc docx exe gif htm jar jpg mbd mov mp4 mpg ole pdf
png ppt pptx rar rif sdw sx sxc sxi sxw vis wav wmv xls xlsx zip

===============================================
npm install 权限问题：EACCES: permission denied
sudo chown -R $USER ~/.npm
sudo chown -R $USER /usr/lib/node_modules
sudo chown -R $USER /usr/local/lib/node_modules
或
mkdir ~/.npm-global
npm config set prefix '~/.npm-global'
~/.bash_profile
export PATH=~/.npm-global/bin:$PATH
source ~/.bash_profile

==============================================
sourcetree 显示提交信息面板
defaults delete com.torusknot.SourceTreeNotMAS "NSSplitView Subview Frames repowindow_LogViewDescSplitter"
==============================================
“Shimo.app”已损坏，打不开。 您应该将它移到废纸篓。
sudo spctl --master-disable

=============================================
Can't open index file for source: rsync://rsync.macports.org/macports/release/tarballs/ports.tar
vi /opt/local/etc/macports/sources.conf
http://www.macports.org/files/ports.tar.gz [default]
sudo port -v selfupdate
=============================================
/opt/local/etc/LaunchDaemons/org.macports.php56-fpm/org.macports.php56-fpm.plist: Path had bad ownership/permissions
sudo chown root /opt/local/etc/LaunchDaemons/org.macports.nginx/org.macports.nginx.plist
sudo chown root /opt/local/etc/LaunchDaemons/org.macports.php56-fpm/org.macports.php56-fpm.plist
sudo launchctl load -w /opt/local/etc/LaunchDaemons/org.macports.nginx/org.macports.nginx.plist
sudo launchctl load -w /opt/local/etc/LaunchDaemons/org.macports.php56-fpm/org.macports.php56-fpm.plist

sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer
sudo xcodebuild -license
=============================================
brew install nginx
brew services start nginx
brew services stop nginx
nginx
nginx -s reload
nginx -s stop
brew uninstall nginx
vi /usr/local/etc/nginx/nginx.conf

brew update
brew tap homebrew/dupes
brew tap josegonzalez/homebrew-php
brew install php70 php70-fpm php70-mysql php70-sqlite php70-curl php70-gd php70-iconv php70-mbstring php70-mcrypt php70-memcached php70-opcache php70-openssl php70-intl php70-gettext php70-imap php70-xmlrpc php70-sockets php70-zip php70-tidy php70-xsl

brew install php70 --with-imap --with-tidy --with-debug --with-mysql --with-fpm

export PATH="$(brew --prefix php70)/bin:$PATH"

vi /usr/local/etc/php/7.0/php-fpm.conf

=========================================
sudo gem install -n /usr/local/bin cocoapods
=========================================
/bin/bash: bad interpreter: Operation not permitted
xattr -dr com.apple.quarantine ./*
=========================================
vi ~/.bash_profile 或 ~/.bashrc
shopt -s histappend
# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
# 忽略重复的命令
# export HISTCONTROL=ignoredups
# 忽略由冒号分割的这些命令
export HISTIGNORE="[   ]*:&:bg:fg:exit"
# 设置保存历史命令的文件大小
export HISTFILESIZE=1000000
# 保存历史命令条数
export HISTSIZE=1000000
# 显示命令执行时间
export HISTTIMEFORMAT='%F %T '
========================================
vi ~/.bash_profile
# Alias
source $HOME/.alias
eval "$(hub alias -s)"
=========================================
http://anyproxy.io/cn/
npm install -g anyproxy
anyproxy 默认端口8001
anyproxy --port 1080
http://127.0.0.1:8002
https://github.com/qqnp1100/chxg
https://github.com/game-helper/weixin
=========================================
Too many open files
sudo launchctl limit maxfiles unlimited
-----------------------------------------
nc 常用：
侦听任意端口，以TCP/UDP 方式
端口扫描
传输文件
测速
1) -l 用于指定nc将处于侦听模式。指定该参数，则意味着nc被当作server，侦听并接受连接，而非向其它地址发起连接。
2) -p <port> 限制数据发送原端口
3) -s 指定发送数据的源IP地址，适用于多网卡机
4) -u 指定nc使用UDP协议，默认为TCP
5) -v 输出交互或出错信息，新手调试时尤为有用
6）-w 超时秒数，后面跟数字
7）-z 表示zero，表示扫描时不发送任何数据
nc -vz -w 5 127.0.0.1 1-100 #对 1-100 端口进行扫描
nc -vz -w 5 127.0.0.1 8888 #连接端口
nc -l 8888 -v #监听端口
=======================================
xcode library not found for -libstdc++.6.0.9
tagets->Build Phases ->Link Binary With Libraries下找到这个库
Xcode10后没有libstdc++库 可以使用：https://github.com/devdawei/libstdc-
https://www.jianshu.com/p/6d94278d62b3
========================================
react-native 工程时，出错：xcrun: error: unable to find utility "instruments", not a developer tool or in PATH
解决方法：在 终端执行如下命令 sudo xcode-select -s /Applications/Xcode.app/Contents/Developer/
注意：前提是你已经安装了xcode
=======================================

brew install wget nmap nginx mysql php@7.1 brew-php-switcher pkg-config libmemcached
brew-php-switcher 7.1
php -m
pecl install memcached
brew services restart php
brew services restart nginx

pecl version 查看版本信息
pecl help 可以查看命令帮助
pecl search xdebug  搜索可以安装的扩展信息
pecl install xdebug 安装扩展

=====================================
mac启动项
1，系统偏好设置->用户与群组->登录项 查看：cat ~/Library/Preferences/com.apple.loginitems.plist
2，launch启动项
ll ~/Library/LaunchAgents
ll /Library/LaunchDaemons
ll /Library/LaunchAgents
ll /System/Library/LaunchDaemons
ll /System/Library/LaunchAgents
launchctl list
launchctl load xxx.plist
launchctl unload xxx.plist
plist文件选项：RunAtLoad自动运行/KeepAlive持续运行/StartCalendarInterval设置定时执行
3，/System/Library/StartupItems 和 /Library/StartupItems
4，crontab -l
5，关闭Spotlight系统偏好设置->聚焦
=========================================
Spotlight 关闭掉
sudo mdutil -a -i off
sudo mdutil -a -i on
cd /System/Library/CoreServices/
sudo mv Search.bundle/ Search2.bundle/
sudo mv Search2.bundle/ Search.bundle/
sudo launchctl unload -w /System/Library/LaunchDaemons/com.apple.metadata.mds.plist
sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.metadata.mds.plist
=======================================
mac chrome 书签位置
cp '/Users/hcxiong/Library/Application Support/Google/Chrome/Default/Bookmarks' '/Users/hcxiong/git_pro/Bookmarks'
把Bookmarks文件删除，然后把Bookmarks.bak重命名为Bookmarks
在Chrome浏览器中输入chrome://restart
==================================
已损坏，打不开。您应该将它移到废纸篓
sudo spctl --master-disable
sudo spctl --master-enable
==================================
java -jar ~/compiler.jar --js "$descPath/jsfile.max.js" --create_source_map "$descPath/jsfile.min.js.map" --source_map_format=V3 --js_output_file "$descPath/jsfile.min.js"
==================================
brew install mediainfo
mediainfo 1.png
https://github.com/MediaArea/MediaInfo
brew cask install qlimagesize
https://github.com/Nyx0uf/qlImageSize/releases/latest
qlmanage -r
https://github.com/Nyx0uf/qlImageSize
brew cask install phew
https://github.com/sveinbjornt/Phew
==================================
diskutil list 或 fdisk -l #查看当前系统所有硬盘及分区情况
diskutil info /dev/disk0 #查看具体分区参数
fdisk /dev/disk2 #在指定的硬盘（例：/dev/sda）上创建分区：查看帮助（h），新建分区（n），删除分区（d），查看分区情况（p），分区成功后，写分区表并退出（w）
mkfs.ext4 /dev/sdb1 #对新建分区（例：/dev/sda1）进行格式化
mkdir -p /dfs/dn1 #创建分区挂接目录
mount /dev/sdb1 /dfs/dn1 #挂接分区
vi /etc/fstab
/dev/sdb1 /dfs/dn1 ext4 defaults 0 0
或者
brew install e2fsprogs
brew install https://raw.githubusercontent.com/yalp/homebrew-core/fuse-ext2/Formula/fuse-ext2.rb
mke2fs
brew cask install osxfuse
brew install ext2fuse
brew install ext4fuse
挂载
sudo ext2fuse /dev/disk2s2 ~/Desktop/usbdisk -o rw+
sudo ext4fuse /dev/disk2s2 ~/Desktop/usbdisk -o rw+
sudo mount -t fuse-ext2 /dev/disk2s2 ~/Desktop/usbdisk
格式化ext4，一定要取消挂载后格式化
sudo mkfs.ext4 /dev/disk2s2
sudo umount ~/Desktop/usbdisk

brew install ntfs-3g
mount -t ntfs-3g
mount -t ntfs-3g /dev/sdb1 /mnt/ntfs_disk
ntfs-3g /dev/sdb1 /mnt/ntfs_disk
vi /etc/fstab
ntfs-3g silent,umask=0,locale=zh_CN.utf8 0 0

MACOS磁盘分区
https://www.jianshu.com/p/6a1f365617ad
diskutil listFilesystems #支持的文件系统
diskutil eraseDisk MS-DOS raspberrypi disk2 #将优盘数据擦除并格式化为 FAT32 格式
diskutil eraseDisk ExFAT raspberrypi disk2 #将优盘数据擦除并格式化为 ExFAT 格式
diskutil eraseDisk HFS+ raspberrypi disk2 #将优盘数据擦除并格式化为 Apple_HFS 格式
diskutil eraseDisk ExFAT raspberrypi MBR disk2 #擦除磁盘时指定分区表类型 NTFS 格式
#创建分区：优盘（disk2）上创建了 3 个分区，第一个（F01）格式为 FAT32，大小是 3 Gb。第二个（F02）格式为 JHFS+，大小为 3 Gb。最后一个是『自由空间』，大小为剩余的容量。
diskutil partitionDisk disk2 3 MBR MS-DOS F01 3G JHFS+ F02 3G HFS+ F03 0
diskutil partitionDisk disk2 2 ExFAT rpi 30G ExFAT data 0
#分割分区：优盘的第二个分区（disk2s2）又分割成了两个更小的分区，分别是 FAT32 格式的 F01（disk2s2），和 JHFS+ 格式的 F02（disk2s3）。虽然命令中指定了 F02 的大小是 3G，因为是最后一个分区，所以自动扩展到占用剩余的磁盘空间。最后它的实际大小是 4.5G。
diskutil splitPartition disk2s2 2 MS-DOS F02 1.5g JHFS+ F04 1.5g
#合并分区：disk2s2 disk2s3
diskutil mergePartitions JHFS+ Starky disk2s2 disk2s3
#调整分区大小（无损）
diskutil resizeVolume disk2s2 4g

LINUX磁盘分区
fdisk -l
fdisk /dev/disk2 #在指定的硬盘（例：/dev/sda）上创建分区：查看帮助（h），新建分区（n），删除分区（d），查看分区情况（p），分区成功后，写分区表并退出（w）
[New]--[Primary]--手动输入分区容量，以M为单位。回车，创建成功。
mkfs.ext4 /dev/sdb1
e2label 分区路径 卷标名
mount -t /dev/sdb1 /mnt/sdb1
umount /dev/sdb1
vi /etc/fstab
/dev/sdb1          /mnt/sdb1          ext4     defaults     0 2
chmod 777 /mnt/sdb1
===============================================
如何修复拆分的融合硬盘
https://support.apple.com/zh-cn/HT207584

制做系统启动盘
下载macos-mojave系统：
https://apps.apple.com/cn/app/macos-mojave/id1398502828?aosid=p239&cid=aos-cn-aff-ir&clickid=3k5zbeSSCxyJU5U0EBxnPXevUknzXx3DDUbp2I0&irchannel=13654&ircid=7639&irgwc=1&irpid=1244234&mt=12
格式化U盘MACOS扩展(日志式)，名称为：Mojave
制作系统盘：
sudo /Applications/Install\ macOS\ Mojave.app/Contents/Resources/createinstallmedia --volume /Volumes/Mojave /Applications/Install\ macOS\ Mojave.app —nointeraction
开机出现闪烁的问号文件夹解决方法
Command (⌘)-R 重新安装您的 Mac 上装有的最新 macOS（建议操作）
Option-⌘-R 升级到与您的 Mac 兼容的最新 macOS
Shift-Option-Command-R 重新安装 Mac 随附的 macOS 或与它最接近且仍在提供的版本。
================================================================
sqlite3 ~/Library/Containers/com.tencent.QQMusicMac/Data/Library/Application\ Support/QQMusicMac/qqmusic.sqlite
select replace(singer||'-'||name,x'0a',','), file from NEWFOLDERSONGS as a inner join NEWFOLDERS as b on a.seq=b.seq and a.seq=199 inner join SONGS as c on c.id=a.id;

